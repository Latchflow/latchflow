plugins:
  get:
    summary: List registered plugins
    operationId: listPlugins
    tags: [Plugins]
    security:
      - cookieAdmin: []
    parameters:
      - in: query
        name: q
        schema: { type: string }
        description: Free-text match against name, description, author
      - in: query
        name: kind
        schema: { type: string, enum: [TRIGGER, ACTION] }
        description: Only plugins that have at least one capability of this kind
      - in: query
        name: capabilityKey
        schema: { type: string }
        description: Substring match against capability key
      - in: query
        name: enabled
        schema: { type: boolean }
        description: Only plugins with at least one enabled capability
      - in: query
        name: limit
        schema: { type: integer, minimum: 1, maximum: 200, default: 50 }
      - in: query
        name: cursor
        schema: { type: string }
        description: Opaque pagination cursor
    responses:
      '200':
        description: Plugins
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items: { $ref: ../components/schemas/Plugin.yaml }
                nextCursor: { type: string }
              required: [items]
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '403': { $ref: ../components/responses/Forbidden.yaml }

plugins_install:
  post:
    summary: Install plugin
    operationId: installPlugin
    tags: [Plugins]
    security:
      - cookieAdmin: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              source: { type: string }
              verifySignature: { type: boolean }
            required: [source]
    responses:
      '202': { description: Installing }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }
      '403': { $ref: ../components/responses/Forbidden.yaml }

plugins_item:
  delete:
    summary: Uninstall plugin
    operationId: uninstallPlugin
    tags: [Plugins]
    security:
      - cookieAdmin: []
    parameters:
      - in: path
        name: pluginId
        required: true
        schema: { type: string, format: uuid }
    responses:
      '204': { description: Removed }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '403': { $ref: ../components/responses/Forbidden.yaml }

plugins_status:
  get:
    summary: Runtime status for a plugin
    operationId: getPluginStatus
    tags: [Plugins]
    security:
      - cookieAdmin: []
    parameters:
      - in: path
        name: pluginId
        required: true
        schema: { type: string, format: uuid }
    responses:
      '200':
        description: Plugin runtime snapshot
        content:
          application/json:
            schema: { $ref: ../components/schemas/PluginStatusResponse.yaml }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '403': { $ref: ../components/responses/Forbidden.yaml }
      '404': { $ref: ../components/responses/NotFound.yaml }

plugin_runtime_health:
  get:
    summary: Aggregate plugin runtime health
    operationId: getPluginRuntimeHealth
    tags: [Plugins]
    security:
      - cookieAdmin: []
    responses:
      '200':
        description: Global plugin runtime summary
        content:
          application/json:
            schema: { $ref: ../components/schemas/PluginRuntimeSummary.yaml }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '403': { $ref: ../components/responses/Forbidden.yaml }
