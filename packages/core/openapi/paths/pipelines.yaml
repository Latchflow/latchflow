pipelines_collection:
  get:
    summary: List pipelines
    operationId: listPipelines
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - $ref: ../components/parameters/Limit.yaml
      - $ref: ../components/parameters/Cursor.yaml
    responses:
      '200':
        description: Pipelines
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items: { $ref: ../components/schemas/Pipeline.yaml }
                nextCursor: { type: string }
              required: [items]
      '401': { $ref: ../components/responses/Unauthorized.yaml }
  post:
    summary: Create pipeline
    operationId: createPipeline
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name: { type: string }
              description: { type: string }
              isEnabled: { type: boolean }
            required: [name]
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema: { $ref: ../components/schemas/Pipeline.yaml }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }

pipelines_item:
  patch:
    summary: Update pipeline
    operationId: updatePipeline
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: string, format: uuid }
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name: { type: string }
              description: { type: string }
              isEnabled: { type: boolean }
    responses:
      '204': { description: Updated }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }
  delete:
    summary: Delete pipeline
    operationId: deletePipeline
    tags: [Pipelines]
    security:
      - cookieAdmin: []
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: string, format: uuid }
    responses:
      '204': { description: Deleted }
      '401': { $ref: ../components/responses/Unauthorized.yaml }

# Pipeline versions (history)
pipeline_versions_collection:
  get:
    summary: List pipeline versions
    operationId: listPipelineVersions
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: string, format: uuid }
      - $ref: ../components/parameters/Limit.yaml
      - $ref: ../components/parameters/Cursor.yaml
    responses:
      '200':
        description: Versions
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items: { $ref: ../components/schemas/ChangeLogVersion.yaml }
                nextCursor: { type: string }
              required: [items]
      '401': { $ref: ../components/responses/Unauthorized.yaml }

pipeline_versions_item:
  get:
    summary: Get pipeline version
    operationId: getPipelineVersion
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: string, format: uuid }
      - in: path
        name: version
        required: true
        schema: { type: integer, minimum: 1 }
    responses:
      '200':
        description: Materialized pipeline at version
        content:
          application/json:
            schema: { $ref: ../components/schemas/ChangeLogMaterialized.yaml }
      '404': { $ref: ../components/responses/NotFound.yaml }
      '401': { $ref: ../components/responses/Unauthorized.yaml }

# Pipeline Steps sub-resource
pipeline_steps_collection:
  get:
    summary: List pipeline steps
    operationId: listPipelineSteps
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
      - $ref: ../components/parameters/Limit.yaml
      - $ref: ../components/parameters/Cursor.yaml
    responses:
      '200':
        description: Pipeline steps
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items: { $ref: ../components/schemas/PipelineStep.yaml }
                nextCursor: { type: string }
              required: [items]
      '401': { $ref: ../components/responses/Unauthorized.yaml }
  post:
    summary: Add pipeline step
    operationId: addPipelineStep
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              actionId: { type: string, format: uuid }
              sortOrder: { type: integer }
              isEnabled: { type: boolean }
            required: [actionId]
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema: { $ref: ../components/schemas/PipelineStep.yaml }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }

pipeline_steps_item:
  patch:
    summary: Update pipeline step
    operationId: updatePipelineStep
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
      - in: path
        name: stepId
        required: true
        schema: { type: string, format: uuid }
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              sortOrder: { type: integer }
              isEnabled: { type: boolean }
    responses:
      '204': { description: Updated }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }
  delete:
    summary: Delete pipeline step
    operationId: deletePipelineStep
    tags: [Pipelines]
    security:
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
      - in: path
        name: stepId
        required: true
        schema: { type: string, format: uuid }
    responses:
      '204': { description: Deleted }
      '401': { $ref: ../components/responses/Unauthorized.yaml }

# Pipeline Triggers sub-resource
pipeline_triggers_collection:
  get:
    summary: List pipeline triggers
    operationId: listPipelineTriggers
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
      - $ref: ../components/parameters/Limit.yaml
      - $ref: ../components/parameters/Cursor.yaml
    responses:
      '200':
        description: Pipeline triggers
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items: { $ref: ../components/schemas/PipelineTrigger.yaml }
                nextCursor: { type: string }
              required: [items]
      '401': { $ref: ../components/responses/Unauthorized.yaml }
  post:
    summary: Attach trigger to pipeline
    operationId: addPipelineTrigger
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              triggerId: { type: string, format: uuid }
              sortOrder: { type: integer }
              isEnabled: { type: boolean }
            required: [triggerId]
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema: { $ref: ../components/schemas/PipelineTrigger.yaml }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }

pipeline_triggers_item:
  patch:
    summary: Update pipeline trigger
    operationId: updatePipelineTrigger
    tags: [Pipelines]
    security:
      - bearer: []
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
      - in: path
        name: triggerId
        required: true
        schema: { type: string, format: uuid }
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              sortOrder: { type: integer }
              isEnabled: { type: boolean }
    responses:
      '204': { description: Updated }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
      '400': { $ref: ../components/responses/ValidationError.yaml }
  delete:
    summary: Detach trigger from pipeline
    operationId: deletePipelineTrigger
    tags: [Pipelines]
    security:
      - cookieAdmin: []
    parameters:
      - in: path
        name: pipelineId
        required: true
        schema: { type: string, format: uuid }
      - in: path
        name: triggerId
        required: true
        schema: { type: string, format: uuid }
    responses:
      '204': { description: Deleted }
      '401': { $ref: ../components/responses/Unauthorized.yaml }
