import { AuthGates } from "@latchflow/testkit-utils";
import type { InMemoryStore } from "./store.js";
import type { RouteDescriptor } from "./types.js";
import {
  whoami,
  authMe,
  adminAuthStart,
  adminAuthCallback,
  adminAuthLogout,
  authSessions,
  authSessionsRevoke,
  recipientAuthStart,
  recipientAuthVerify,
  recipientAuthLogout,
  cliDeviceStart,
  cliDeviceApprove,
  cliDevicePoll,
  cliTokens,
  cliTokensRevoke,
  cliTokensRotate,
  listFiles,
  uploadFile,
  uploadUrl,
  getFile,
  deleteFile,
  moveFile,
  updateFileMetadata,
  batchDeleteFiles,
  batchMoveFiles,
  downloadFile,
  listBundles,
  createBundle,
  getBundle,
  updateBundle,
  deleteBundle,
  listBundleObjects,
  attachBundleObjects,
  deleteBundleObject,
  listRecipients,
  createRecipient,
  getRecipient,
  updateRecipient,
  deleteRecipient,
  listBundleRecipients,
  batchAttachBundleRecipients,
  portalMe,
  portalBundles,
  portalBundleObjects,
  portalBundleDownload,
  portalOtpResend,
  listPlugins,
  getPlugin,
  installPlugin,
  listCapabilities,
  listTriggers,
  getTrigger,
  listActions,
  getAction,
  listPipelines,
  getPipeline,
  listUsers,
  setUserRoles,
} from "./routes/index.js";

export function assembleAllRoutes(auth: AuthGates, store: InMemoryStore): RouteDescriptor[] {
  return [
    whoami(auth),
    authMe(auth),
    adminAuthStart(),
    adminAuthCallback(),
    adminAuthLogout(),
    authSessions(),
    authSessionsRevoke(),
    recipientAuthStart(),
    recipientAuthVerify(),
    recipientAuthLogout(),
    cliDeviceStart(),
    cliDeviceApprove(),
    cliDevicePoll(),
    cliTokens(),
    cliTokensRevoke(),
    cliTokensRotate(),

    listFiles(auth, store),
    uploadFile(auth, store),
    uploadUrl(auth),
    getFile(auth, store),
    deleteFile(auth, store),
    moveFile(auth, store),
    updateFileMetadata(auth, store),
    batchDeleteFiles(auth, store),
    batchMoveFiles(auth, store),
    downloadFile(auth),

    listBundles(auth, store),
    createBundle(auth, store),
    getBundle(auth, store),
    updateBundle(auth, store),
    deleteBundle(auth, store),
    listBundleObjects(auth, store),
    attachBundleObjects(auth, store),
    deleteBundleObject(auth, store),

    listRecipients(auth, store),
    createRecipient(auth, store),
    getRecipient(auth, store),
    updateRecipient(auth, store),
    deleteRecipient(auth, store),
    listBundleRecipients(auth, store),
    batchAttachBundleRecipients(auth, store),

    portalMe(),
    portalBundles(store),
    portalBundleObjects(store),
    portalBundleDownload(),
    portalOtpResend(),

    listPlugins(),
    getPlugin(),
    installPlugin(),
    listCapabilities(),

    listTriggers(),
    getTrigger(),
    listActions(),
    getAction(),
    listPipelines(),
    getPipeline(),

    listUsers(),
    setUserRoles(),
  ];
}
